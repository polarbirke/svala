@import 'generate-classes';

@mixin map-iterator($config-map, $breakpoint-modifier: null, $is-responsive-iteration: false) {
    $breakpoint-modifier-divider: map-get($svala-options, 'breakpoint-modifier-divider');
    $prefix: map-get($svala-options, 'prefix');
    $postfix: map-get($svala-options, 'postfix');

    @if $is-responsive-iteration {
        @if (map-get($svala-options, 'responsive-mode') == 'trailing') {
            $postfix: #{$postfix + $breakpoint-modifier-divider + $breakpoint-modifier};
        } @else if (map-get($svala-options, 'responsive-mode') == 'leading') {
            $prefix: #{$breakpoint-modifier + $breakpoint-modifier-divider + $prefix};
        }
    }

    @each $token, $token-map in $config-map {
        $property: map-get($token-map, 'property');
        $selector: $token;
        $value: map-get($token-map, 'value');
        $values: map-get($token-map, 'values') or null;
        $axes: map-get($token-map, 'axes') or map-get($token-map, 'axis') or null;
        $axes-shorthand: map-get($token-map, 'axes-shorthand') or map-get($token-map, 'axis-shorthand') or false;
        $states: map-get($token-map, 'states') or null;
        $responsive: map-get($token-map, 'responsive') or false;
        $important: map-get($token-map, 'important') or false;

        @if ($responsive or not $is-responsive-iteration) {
            @include generate-classes(
                $property: $property,
                $selector: $selector,
                $value: $value,
                $values: $values,
                $axes: $axes,
                $axes-shorthand: $axes-shorthand,
                $states: $states,
                $prefix: $prefix,
                $postfix: $postfix,
                $important: $important
            );
        }
    }
}
